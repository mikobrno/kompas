version: '3.9'

services:
  supabase-db:
    image: public.ecr.aws/supabase/postgres:17.4.1.068
    container_name: supabase_db_local
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${SUPABASE_DB_PASSWORD}
      POSTGRES_USER: supabase_admin
      POSTGRES_DB: postgres
      JWT_SECRET: ${SUPABASE_JWT_SECRET}
      JWT_EXP: 3600
    ports:
      - "54322:5432"
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
      - supabase-config:/etc/postgresql-custom
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "127.0.0.1", "-p", "5432"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - supabase

  supabase-mailer:
    image: public.ecr.aws/supabase/mailpit:v1.22.3
    container_name: supabase_mailer_local
    restart: unless-stopped
    ports:
      - "54324:8025"
    networks:
      - supabase

  supabase-auth:
    image: public.ecr.aws/supabase/gotrue:v2.177.0
    container_name: supabase_auth_local
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      supabase-mailer:
        condition: service_started
    environment:
      API_EXTERNAL_URL: ${SUPABASE_PUBLIC_URL}
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgresql://supabase_auth_admin:${SUPABASE_DB_PASSWORD}@supabase-db:5432/postgres
      GOTRUE_SITE_URL: ${SUPABASE_SITE_URL}
      GOTRUE_URI_ALLOW_LIST: ${SUPABASE_SITE_URL}
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      GOTRUE_JWT_ISSUER: ${SUPABASE_PUBLIC_URL}/auth/v1
      GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
      GOTRUE_MAILER_SECURE_EMAIL_CHANGE_ENABLED: "true"
      GOTRUE_MAILER_AUTOCONFIRM: "true"
      GOTRUE_MAILER_OTP_LENGTH: 6
      GOTRUE_MAILER_OTP_EXP: 3600
      GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: "false"
      GOTRUE_SMTP_MAX_FREQUENCY: 1s
      GOTRUE_MAILER_URLPATHS_INVITE: ${SUPABASE_PUBLIC_URL}/auth/v1/verify
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: ${SUPABASE_PUBLIC_URL}/auth/v1/verify
      GOTRUE_MAILER_URLPATHS_RECOVERY: ${SUPABASE_PUBLIC_URL}/auth/v1/verify
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: ${SUPABASE_PUBLIC_URL}/auth/v1/verify
      GOTRUE_RATE_LIMIT_EMAIL_SENT: 360000
      GOTRUE_EXTERNAL_PHONE_ENABLED: "false"
      GOTRUE_SMS_AUTOCONFIRM: "true"
      GOTRUE_SMS_MAX_FREQUENCY: 5s
      GOTRUE_SMS_OTP_EXP: 6000
      GOTRUE_SMS_OTP_LENGTH: 6
      GOTRUE_SMS_TEMPLATE: "Your code is {{ .Code }}"
      GOTRUE_PASSWORD_MIN_LENGTH: 6
      GOTRUE_SECURITY_REFRESH_TOKEN_ROTATION_ENABLED: "true"
      GOTRUE_SECURITY_REFRESH_TOKEN_REUSE_INTERVAL: 10
      GOTRUE_SECURITY_MANUAL_LINKING_ENABLED: "false"
      GOTRUE_SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION: "false"
      GOTRUE_MFA_PHONE_ENROLL_ENABLED: "false"
      GOTRUE_MFA_PHONE_VERIFY_ENABLED: "false"
      GOTRUE_MFA_TOTP_ENROLL_ENABLED: "false"
      GOTRUE_MFA_TOTP_VERIFY_ENABLED: "false"
      GOTRUE_MFA_WEB_AUTHN_ENROLL_ENABLED: "false"
      GOTRUE_MFA_WEB_AUTHN_VERIFY_ENABLED: "false"
      GOTRUE_MFA_MAX_ENROLLED_FACTORS: 10
      GOTRUE_RATE_LIMIT_ANONYMOUS_USERS: 30
      GOTRUE_RATE_LIMIT_TOKEN_REFRESH: 150
      GOTRUE_RATE_LIMIT_OTP: 30
      GOTRUE_RATE_LIMIT_VERIFY: 30
      GOTRUE_RATE_LIMIT_SMS_SENT: 30
      GOTRUE_RATE_LIMIT_WEB3: 30
      GOTRUE_SMTP_HOST: supabase-mailer
      GOTRUE_SMTP_PORT: 1025
      GOTRUE_SMTP_ADMIN_EMAIL: admin@email.com
      GOTRUE_SMTP_SENDER_NAME: Admin
    networks:
      - supabase

  supabase-rest:
    image: public.ecr.aws/supabase/postgrest:v12.2.12
    container_name: supabase_rest_local
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      PGRST_DB_URI: postgresql://authenticator:${SUPABASE_DB_PASSWORD}@supabase-db:5432/postgres
      PGRST_DB_SCHEMAS: public,graphql_public
      PGRST_DB_EXTRA_SEARCH_PATH: public,extensions
      PGRST_DB_MAX_ROWS: 1000
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${SUPABASE_JWT_SECRET_JWK}
      PGRST_ADMIN_SERVER_PORT: 3001
    networks:
      - supabase

  supabase-realtime:
    image: public.ecr.aws/supabase/realtime:v2.41.10
    container_name: supabase_realtime_local
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      PORT: 4000
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_USER: supabase_admin
      DB_PASSWORD: ${SUPABASE_DB_PASSWORD}
      DB_NAME: postgres
      DB_AFTER_CONNECT_QUERY: SET search_path TO _realtime
      DB_ENC_KEY: supabaserealtime
      API_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      API_JWT_JWKS: ${SUPABASE_JWT_SECRET_JWK}
      METRICS_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      APP_NAME: realtime
      SECRET_KEY_BASE: ${SUPABASE_REALTIME_SECRET_KEY_BASE}
      ERL_AFLAGS: -proto_dist inet_tcp
      SEED_SELF_HOST: "true"
      RUN_JANITOR: "true"
      MAX_HEADER_LENGTH: 4096
      MIX_ENV: prod
    networks:
      - supabase

  supabase-storage:
    image: public.ecr.aws/supabase/storage-api:v1.25.12
    container_name: supabase_storage_local
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      ANON_KEY: ${SUPABASE_ANON_KEY}
      SERVICE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      AUTH_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      JWT_JWKS: ${SUPABASE_JWT_SECRET_JWK}
      DATABASE_URL: postgresql://supabase_storage_admin:${SUPABASE_DB_PASSWORD}@supabase-db:5432/postgres
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /mnt
      TENANT_ID: stub
      STORAGE_S3_REGION: local
      GLOBAL_S3_BUCKET: stub
      ENABLE_IMAGE_TRANSFORMATION: "false"
      IMGPROXY_URL: ""
      TUS_URL_PATH: /storage/v1/upload/resumable
      S3_PROTOCOL_ACCESS_KEY_ID: ${SUPABASE_S3_ACCESS_KEY_ID}
      S3_PROTOCOL_ACCESS_KEY_SECRET: ${SUPABASE_S3_SECRET_KEY}
      S3_PROTOCOL_PREFIX: /storage/v1
      UPLOAD_FILE_SIZE_LIMIT: 52428800000
      UPLOAD_FILE_SIZE_LIMIT_STANDARD: 5242880000
    volumes:
      - supabase-storage:/mnt
    networks:
      - supabase

  supabase-analytics:
    image: public.ecr.aws/supabase/logflare:1.14.2
    container_name: supabase_analytics_local
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      DB_DATABASE: _supabase
      DB_HOSTNAME: supabase-db
      DB_PORT: 5432
      DB_SCHEMA: _analytics
      DB_USERNAME: supabase_admin
      DB_PASSWORD: ${SUPABASE_DB_PASSWORD}
      LOGFLARE_MIN_CLUSTER_SIZE: 1
      LOGFLARE_SINGLE_TENANT: "true"
      LOGFLARE_SUPABASE_MODE: "true"
      LOGFLARE_PRIVATE_ACCESS_TOKEN: api-key
      LOGFLARE_LOG_LEVEL: warn
      LOGFLARE_NODE_HOST: 127.0.0.1
      LOGFLARE_FEATURE_FLAG_OVERRIDE: 'multibackend=true'
      RELEASE_COOKIE: cookie
      POSTGRES_BACKEND_URL: postgresql://postgres:${SUPABASE_DB_PASSWORD}@supabase-db:5432/_supabase
      POSTGRES_BACKEND_SCHEMA: _analytics
    healthcheck:
      test: ["CMD", "curl", "-sSfL", "--head", "-o", "/dev/null", "http://127.0.0.1:4000/health"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - supabase

  supabase-pg-meta:
    image: public.ecr.aws/supabase/postgres-meta:v0.91.3
    container_name: supabase_pg_meta_local
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: supabase-db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: postgres
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: ${SUPABASE_DB_PASSWORD}
    networks:
      - supabase

  supabase-kong:
    image: public.ecr.aws/supabase/kong:2.8.1
    container_name: supabase_kong_local
    restart: unless-stopped
    depends_on:
      supabase-auth:
        condition: service_started
      supabase-rest:
        condition: service_started
      supabase-realtime:
        condition: service_started
      supabase-storage:
        condition: service_started
      supabase-analytics:
        condition: service_started
      supabase-pg-meta:
        condition: service_started
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PLUGINS: request-transformer,cors
      KONG_NGINX_WORKER_PROCESSES: 1
    volumes:
      - ./docker/kong.yml:/etc/kong/kong.yml:ro
    ports:
      - "54321:8000"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - supabase

  supabase-studio:
    image: public.ecr.aws/supabase/studio:2025.07.28-sha-578b707
    container_name: supabase_studio_local
    restart: unless-stopped
    depends_on:
      supabase-kong:
        condition: service_healthy
      supabase-pg-meta:
        condition: service_started
      supabase-analytics:
        condition: service_started
    environment:
      CURRENT_CLI_VERSION: 2.53.6
      STUDIO_PG_META_URL: http://supabase-pg-meta:8080
      POSTGRES_PASSWORD: ${SUPABASE_DB_PASSWORD}
      SUPABASE_URL: http://supabase-kong:8000
      SUPABASE_PUBLIC_URL: ${SUPABASE_PUBLIC_URL}
      AUTH_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      LOGFLARE_PRIVATE_ACCESS_TOKEN: api-key
      LOGFLARE_URL: http://supabase-analytics:4000
      NEXT_PUBLIC_ENABLE_LOGS: "true"
      NEXT_ANALYTICS_BACKEND_PROVIDER: postgres
      HOSTNAME: 0.0.0.0
    ports:
      - "54323:3000"
    healthcheck:
      test: ["CMD-SHELL", "node --eval=\"fetch('http://127.0.0.1:3000/api/platform/profile').then((r)=>{if(!r.ok)throw new Error(r.status)})\""]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - supabase

  migrations:
    image: supabase/cli:2.53.6
    container_name: supabase_migrations
    depends_on:
      supabase-db:
        condition: service_healthy
    volumes:
      - ./:/workspace
    working_dir: /workspace
    entrypoint: ["/bin/sh", "-c"]
    command: supabase db push --db-url postgresql://postgres:${SUPABASE_DB_PASSWORD}@supabase-db:5432/postgres
    networks:
      - supabase
    restart: "no"

  kompas-web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
        VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
    image: kompas-web:latest
    container_name: kompas_web
    depends_on:
      supabase-kong:
        condition: service_healthy
    ports:
      - "8080:80"
    networks:
      - supabase

networks:
  supabase:
    driver: bridge

volumes:
  supabase-db-data:
  supabase-config:
  supabase-storage:
